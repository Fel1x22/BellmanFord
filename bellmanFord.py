#Aiming to use this to test out teh Bellman Ford Algorithm

#distanceMatrix = [[0, 1000, 7, 1000, 1, 3], [5, 0, 1000, 1000, 2, 1000], [1000, 1000, 0, 1000, 1000, 1000],
 #[1000, 2, 1000, 0, 1000, 1000], [1000, 1000, 1000, 1000, 0, 6], [1000, 1000, 1000, 1000, 1000, 0], ]

distanceMatrix = [[0, 1000, 1000, 3, 8, 20, 1000, 1000, 1000, 1000, 1000, 1000, 5, 1000, 1000, 1000, 23, 1000, 1000, 1000], [1000, 0, 27, 1000, 9, 11, 14, 1000, 5, 1000, 20, 1000, 1000, 1000, 1000, 5, 1000, 1000, 1000, 1000], [1000, 1000, 0, 25, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 6, 14, 1000, 1000, 1000, 1000, 1000, 27], [1000, 8, 1000, 0, 19, 1000, 1000, 1000, 2, 1000, 1000, 1000, 1000, 1000, 17, 1000, 1000, 25, 1000, 14], [1000, 1000, 1000, 1000, 0, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 8, 1000, 1000, 1000, 1000], [1000, 1000, 1000, 1000, 1000, 0, 1000, 19, 15, 1000, 2, 13, 1000, 1000, 17, 1000, 1000, 1000, 1000, 8], [4, 1000, 7, 1000, 10, 4, 0, 15, 1000, 1000, 29, 1000, 18, 17, 1000, 1000, 1000, 1000, 26, 2], [1000, 1000, 1000, 1000, 1000, 1000, 1000, 0, 1000, 1000, 1000, 1000, 10, 1000, 1, 1000, 1000, 13, 1000, 23], [1000, 1000, 1000, 1000, 18, 1000, 1000, 29, 0, 1000, 23, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 11, 5], [18, 1000, 1000, 1000, 1000, 1000, 5, 1000, 1000, 0, 7, 1000, 26, 12, 1000, 1000, 1000, 6, 1000, 1000], [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 0, 1000, 1000, 1000, 8, 1000, 18, 1000, 1, 10], [19, 1000, 10, 16, 1000, 1000, 6, 1000, 1000, 1000, 2, 0, 1000, 1000, 1000, 1000, 1000, 1000, 3, 15], [1000, 1000, 1000, 1000, 11, 23, 1000, 1000, 6, 1000, 19, 1000, 0, 1000, 1000, 1000, 1000, 1000, 1000, 4], [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 12, 1000, 1000, 4, 1000, 0, 1000, 1000, 12, 1000, 20, 1000], [1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 28, 0, 13, 1000, 1000, 1000, 6], [1000, 1000, 1000, 28, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 0, 1000, 1000, 16, 1000], [1000, 9, 1000, 9, 1000, 28, 1000, 7, 16, 1000, 1000, 26, 13, 1000, 1000, 1000, 0, 1000, 1000, 1000], [1000, 1000, 1000, 1000, 26, 30, 1000, 1000, 1000, 1000, 1000, 10, 24, 1000, 1000, 1000, 1000, 0, 1000, 1000], [1000, 20, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 27, 1000, 1000, 1000, 1000, 1000, 0, 1000], [29, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 0]]


D = [1000] * len(distanceMatrix)
D[0] = 0

def relax(u, v):
    if D[u] + distanceMatrix[u][v] < D[v]:
        D[v] = D[u] + distanceMatrix[u][v]


for i in range(0, len(D)):
    for j in range(0, len(distanceMatrix)):
        for k in range(0, len(distanceMatrix[j])):
            if j != k and distanceMatrix[j][k] != 1000:
                relax(j, k)

print(D)